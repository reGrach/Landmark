// <auto-generated />
using System;
using Landmark.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Landmark.Database.Migrations
{
    [DbContext(typeof(LandmarkContext))]
    [Migration("20231103011050_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Landmark.Database.Model.Participant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<long?>("RaceId")
                        .HasColumnType("bigint")
                        .HasColumnName("race_id");

                    b.HasKey("Id")
                        .HasName("pk_participant");

                    b.HasIndex("RaceId")
                        .HasDatabaseName("ix_participant_race_id");

                    b.ToTable("participant", (string)null);
                });

            modelBuilder.Entity("Landmark.Database.Model.Race", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CountPoints")
                        .HasColumnType("integer")
                        .HasColumnName("count_points");

                    b.Property<TimeOnly?>("FinishTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("finish_time");

                    b.Property<string>("SerialTag")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("serial_tag");

                    b.Property<int>("SexType")
                        .HasColumnType("integer")
                        .HasColumnName("sex_type");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("start_time");

                    b.Property<int>("TeamNumber")
                        .HasColumnType("integer")
                        .HasColumnName("team_number");

                    b.HasKey("Id")
                        .HasName("pk_races");

                    b.ToTable("races", (string)null);
                });

            modelBuilder.Entity("Landmark.Database.Model.Participant", b =>
                {
                    b.HasOne("Landmark.Database.Model.Race", null)
                        .WithMany("Participants")
                        .HasForeignKey("RaceId")
                        .HasConstraintName("fk_participant_races_race_id");
                });

            modelBuilder.Entity("Landmark.Database.Model.Race", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
